name: update_version

on:
  push:
    branches: 
      - release/v*

jobs:
  version_up:
    runs-on: ubuntu-latest

    steps:
      - name: Git Tag name
        id: vars
        run: |
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF##**/v}" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.vars.outputs.branch }}
          fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod

      - name: Initialize Git
        shell: bash
        run: |
          git config --global user.name  "GitHub Actions"
          git config --global user.email "action@github.com"
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
          git worktree add site/public gh-pages

      - name: Update Version
        run: |
          sed "s/^version = \"[0-9.]*\"$/version = \"${{ steps.vars.outputs.tag }}\"/" Cargo.toml > a
          mv a Cargo.toml
          sed "s/^ARG VERSION=[0-9.]*$/ARG VERSION=${{ steps.vars.outputs.tag }}/" Dockerfile > a
          mv a Dockerfile
          regex1='s/v[0-9]*\.[0-9]*\.[0-9]*/v${{ steps.vars.outputs.tag }}/g'
          regex2='s/btmeister:[0-9]*\.[0-9]*\.[0-9]*]?\]/btmeister:${{ steps.vars.outputs.tag }}/g'
          sed -e $regex1 -e $regex2 README.md > a ; mv a README.md
          sed -e $regex1 -e $regex2 site/content/_index.md > a ; mv a site/content/_index.md
          sed -e $regex2 site/content/usage.md > a ; mv a site/content/usage.md
          # no need to commit error when pushing the same version twice or more because no need to commit.
          # therefore, ignore the error.
          git commit -a -m "update version to ${{ steps.vars.outputs.tag }}, ready to publish v${{ steps.vars.outputs.tag }}" || true

      - name: Push branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.vars.outputs.branch }}
