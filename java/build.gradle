buildscript {
    ext.versions = [
            'btmeister': '1.0.0-beta-1',
            'picocli': '4.6.3',
            'jackson': '2.13.1',
            'jupiter': '5.8.2',
            'vavr': '0.10.4',
    ]
}

plugins {
    id 'java'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.github.kt3k.coveralls' version '2.12.0'
    id "io.github.fstaudt.hugo" version "0.2.0"
    id "com.palantir.graal" version "0.10.0"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        url "https://tamada.github.io/maven"
    }
}

dependencies {
    implementation "info.picocli:picocli:4.7.0"
    implementation "io.vavr:vavr:${versions.vavr}"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.14.1"
    implementation "jp.cafebabe:diranger:1.0.0-beta-3"

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-jdk14
    implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '2.0.6'

    testImplementation "org.junit.jupiter:junit-jupiter:5.9.0"

    annotationProcessor "info.picocli:picocli-codegen:4.7.0"
}

compileJava {
    sourceCompatibility = 17
    targetCompatibility = 17
    options.compilerArgs += [
            "-Aproject=${project.name}",
            "-Aother.resource.patterns=resources/.*.json,resources/.*.properties"
    ]
}

jacoco {
    toolVersion = '0.8.8'
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filesMatching("**/*.properties") {
            expand([
                    'version': "${versions.btmeister}"
                    ])
        }
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
}

jar {
    archiveBaseName = rootProject.name
    archiveVersion = versions.btmeister
    manifest {
        attributes 'Main-Class': 'jp.cafebabe.btmeister.cli.Main',
                'Class-Path': configurations.compileClasspath.files.collect { it.getName() }.join(' '),
                'Implementation-Version': versions.btmeister
    }
}

task copyFile(type: Copy) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.compileClasspath
    into "$buildDir/libs"
}

build.finalizedBy copyFile

coveralls {
    sourceDirs = [ "src/main/java" ]
    jacocoReportPath = "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
}

hugo {
    version = "0.92.2"
}

tasks.hugoBuild {
    outputDirectory = file("$buildDir/hugo/publish")
    publicationPath = ""
    arguments = []
    doLast {
        delete "${outputDirectory}/apple-touch-icon.png", "${outputDirectory}/favicon-16x16.png",
                "${outputDirectory}/favicon-32x32.png", "${outputDirectory}/favicon.ico"
    }
}

//graal {
//    mainClass 'jp.cafebabe.btmeister.cli.Main'
//    outputName 'btmeister'
//    graalVersion '22.0.0.2'
//    javaVersion = 11
//}
