_btmeister() {
    local i cur prev opts cmd
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    cmd=""
    opts=""

    for i in ${COMP_WORDS[@]}
    do
        case "${cmd},${i}" in
            ",$1")
                cmd="btmeister"
                ;;
            *)
                ;;
        esac
    done

    case "${cmd}" in
        btmeister)
            opts="-D -i -e -L -f -l -h -V --definition --append-defs --ignore-type --excludes --list-defs --format --level --help --version [PROJECTs]..."
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 1 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                -D | --definition)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --append-defs)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -i | --ignore-type)
                    COMPREPLY=($(compgen -W "default hidden ignore git-ignore git-global git-exclude" -- "${cur}"))
                    return 0
                    ;;
                -e | --excludes)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                -f | --format)
                    COMPREPLY=($(compgen -W "csv default json markdown xml yaml" -- "${cur}"))
                    return 0
                    ;;
                -l | --level)
                    COMPREPLY=($(compgen -W "error warn info debug trace" -- "${cur}"))
                    return 0
                    ;;
                *)
                    if [[ "${cur}" == "@*" ]]; then
                        COMPREPLY=($(compgen -f "${cur:1}" -P "@")) # complete file
                    else
                        COMPREPLY=($(compgen -d "${cur}"))          # complete directory
                    fi
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
    esac
}

if [[ "${BASH_VERSINFO[0]}" -eq 4 && "${BASH_VERSINFO[1]}" -ge 4 || "${BASH_VERSINFO[0]}" -gt 4 ]]; then
    complete -F _btmeister -o nosort -o bashdefault -o default btmeister
else
    complete -F _btmeister -o bashdefault -o default btmeister
fi
