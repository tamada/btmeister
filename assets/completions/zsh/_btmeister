#compdef btmeister

autoload -U is-at-least

_btmeister() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'-D+[Specify the definition of the build tools.]:DEFS_JSON:_files' \
'--definition=[Specify the definition of the build tools.]:DEFS_JSON:_files' \
'--append-defs=[Specify the additional definitions of the build tools.]:DEFS_JSON:_files' \
'*-i+[Specify the ignore type.]:IGNORE_TYPE:((default\:"\[IgnoreType\:\:Ignore\], \[IgnoreType\:\:GitIgnore\], \[IgnoreType\:\:GitGlobal\], and \[IgnoreType\:\:GitExclude\]. All of the ignore types are enabled"
hidden\:"ignore hidden file"
ignore\:"ignore respecting \`.ignore\` file"
git-ignore\:"ignore respecting \`.gitignore\` file"
git-global\:"ignore respecting global git ignore file"
git-exclude\:"ignore respecting \`.git/info/exclude\` file"))' \
'*--ignore-type=[Specify the ignore type.]:IGNORE_TYPE:((default\:"\[IgnoreType\:\:Ignore\], \[IgnoreType\:\:GitIgnore\], \[IgnoreType\:\:GitGlobal\], and \[IgnoreType\:\:GitExclude\]. All of the ignore types are enabled"
hidden\:"ignore hidden file"
ignore\:"ignore respecting \`.ignore\` file"
git-ignore\:"ignore respecting \`.gitignore\` file"
git-global\:"ignore respecting global git ignore file"
git-exclude\:"ignore respecting \`.git/info/exclude\` file"))' \
'*-e+[Specify the filters of excluding files or directories.]:EXCLUDEs:_default' \
'*--excludes=[Specify the filters of excluding files or directories.]:EXCLUDEs:_default' \
'-f+[Specify the output format]:FORMAT:(csv default json markdown xml yaml)' \
'--format=[Specify the output format]:FORMAT:(csv default json markdown xml yaml)' \
'-l+[Specify the log level.]:LEVEL:(error warn info debug trace)' \
'--level=[Specify the log level.]:LEVEL:(error warn info debug trace)' \
'-L[Print the build tools'\'' definition list]' \
'--list-defs[Print the build tools'\'' definition list]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
'*::dirs -- The target project paths. If "-" was given, reads from stdin.
Also, the first character was "@", read from the file eliminating "@".
This parameters accept directories and archive files.
Supported archive files\: tar, tar.bz2, tar.gz, tar.xz, tar.zstd, and zip.:_default' \
&& ret=0
}

(( $+functions[_btmeister_commands] )) ||
_btmeister_commands() {
    local commands; commands=()
    _describe -t commands 'btmeister commands' commands "$@"
}

if [ "$funcstack[1]" = "_btmeister" ]; then
    _btmeister "$@"
else
    compdef _btmeister btmeister
fi
